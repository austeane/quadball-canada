---
import type { Locale } from "../../utils/localization";

interface Props {
  currentPath: string;
  alternate?: { en: string; fr: string };
}

const { currentPath, alternate } = Astro.props as Props;

const staticMappings: Array<{ en: string; fr: string }> = [
  { en: "/", fr: "/fr/" },
  { en: "/about/", fr: "/fr/a-propos/" },
  { en: "/contact/", fr: "/fr/contact/" },
  { en: "/events/", fr: "/fr/evenements/" },
  { en: "/get-involved/", fr: "/fr/simpliquer/" },
  { en: "/teams/", fr: "/fr/equipes/" },
  { en: "/news/", fr: "/fr/nouvelles/" },
];

const normalize = (path: string) => (path.endsWith("/") ? path : `${path}/`);

const normalizedPath = normalize(currentPath || "/");
const isFr = normalizedPath.startsWith("/fr/");

function mapStatic(target: Locale) {
  if (target === "fr") {
    const match = staticMappings.find((entry) => normalize(entry.en) === normalizedPath);
    return match?.fr;
  }
  const match = staticMappings.find((entry) => normalize(entry.fr) === normalizedPath);
  return match?.en;
}

function mapTo(locale: Locale) {
  if (alternate && alternate[locale]) {
    return alternate[locale];
  }

  if (locale === "fr") {
    if (isFr) return normalizedPath;
    return mapStatic("fr") ?? "/fr/";
  }

  if (!isFr) return normalizedPath;
  return mapStatic("en") ?? "/";
}
---

<nav class="lang-switcher" aria-label="Language">
  <a class="lang" data-language-switch="en" href={mapTo('en')} aria-current={!isFr ? 'true' : undefined}>EN</a>
  <span class="sep">/</span>
  <a class="lang" data-language-switch="fr" href={mapTo('fr')} aria-current={isFr ? 'true' : undefined}>FR</a>
  
</nav>

<style>
  .lang-switcher { display: inline-flex; align-items: center; gap: 6px; }
  .lang { color: var(--black); text-decoration: none; font-weight: 600; }
  .lang[aria-current="true"] { text-decoration: underline; }
  .sep { color: var(--gray-600); }
</style>
