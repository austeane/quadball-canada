---
import type { Locale } from "../../utils/localization";
import { inferLocaleFromPath, switchLocalePath } from "../../i18n";
import { t } from "../../i18n/ui";

interface Props {
  currentPath: string;
  alternate?: Partial<Record<Locale, string>>;
}

const props = Astro.props as Props;
const currentPath = props.currentPath ?? Astro.url.pathname ?? "/";
const alternate = props.alternate;
const locale: Locale = inferLocaleFromPath(currentPath);
const isFr = locale === "fr";

function mapTo(target: Locale) {
  try {
    return switchLocalePath(currentPath, target, alternate);
  } catch (error) {
    if (import.meta.env.DEV) {
      console.warn(`[i18n] Failed to resolve alternate path for ${target} from ${currentPath}`, error);
    }
    return target === "fr" ? "/fr/" : "/";
  }
}
---

<nav class="lang-switcher" aria-label={t(locale, "layout.languageLabel")}>
  <a class="lang" data-language-switch="en" href={mapTo('en')} aria-current={!isFr ? 'true' : undefined}>EN</a>
  <span class="sep">/</span>
  <a class="lang" data-language-switch="fr" href={mapTo('fr')} aria-current={isFr ? 'true' : undefined}>FR</a>
  
</nav>

<style>
  .lang-switcher { display: inline-flex; align-items: center; gap: 6px; }
  .lang { color: var(--black); text-decoration: none; font-weight: 600; }
  .lang[aria-current="true"] { text-decoration: underline; }
  .sep { color: var(--gray-600); }
</style>
