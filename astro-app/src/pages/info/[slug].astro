---
import type { InferGetStaticParamsType } from "astro";
import Layout from "../../layouts/Layout.astro";
import { PortableText } from "astro-portabletext";
import { getInfoArticles, getInfoArticle, type Locale } from "../../utils/sanity";

export async function getStaticPaths() {
  const locale: Locale = "en";
  const articles = await getInfoArticles(locale);
  return articles.map((article) => ({ params: { slug: article.slug } }));
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
const { slug } = Astro.params as Params;
const locale: Locale = "en";
const article = await getInfoArticle(slug, locale);

if (!article) {
  throw new Error(`Information article not found: ${slug}`);
}

const alternate = article.slugFr
  ? {
      en: `/info/${article.slug}/`,
      fr: `/fr/info/${article.slugFr}/`,
    }
  : undefined;

const description = article.seo?.metaDescription ?? article.excerpt ?? "Quadball Canada informational article.";
---

<Layout title={article.seo?.metaTitle ?? article.title} alternate={alternate} locale="en">
  <meta slot="head" name="description" content={description} />
  <section class="info-article">
    <h1>{article.title}</h1>
    {article.excerpt && <p class="info-article__excerpt">{article.excerpt}</p>}
    <PortableText value={article.content} />
  </section>
</Layout>

<style>
  .info-article {
    padding: 48px 0;
    display: grid;
    gap: 24px;
  }

  .info-article__excerpt {
    font-size: 1.1rem;
    line-height: 1.6;
    color: var(--gray-600);
  }

  .info-article :global(h2) {
    margin-top: 2rem;
  }

  .info-article :global(img) {
    max-width: 100%;
    border-radius: 8px;
  }
</style>
