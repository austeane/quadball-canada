---
import type { InferGetStaticParamsType } from "astro";
import { PortableText } from "astro-portabletext";
import Layout from "../../layouts/Layout.astro";
import { getEvent, getEvents, type Locale } from "../../utils/sanity";

export async function getStaticPaths() {
  const locale: Locale = "en";
  const events = await getEvents(locale);
  return events.map((e) => ({ params: { slug: e.slug } }));
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
const { slug } = Astro.params as Params;
const locale: Locale = "en";
const event = await getEvent(slug, locale);

if (!event) throw new Error(`Event not found: ${slug}`);
---

<Layout
  title={event.title}
  alternate={{ en: `/events/${event.slugEn}`, fr: `/fr/evenements/${event.slugFr ?? event.slugEn}` }}
  locale="en"
>
  <section>
    <h1>{event.title}</h1>
    <p>
      {new Date(event.startDateTime).toLocaleString()} {event.endDateTime ? `â€“ ${new Date(event.endDateTime).toLocaleString()}` : ''}
    </p>
    {event.content && <PortableText value={event.content} />}
  </section>
</Layout>
